# ============================================================================
# GitHub Labels Setup Workflow
# ============================================================================
# Purpose: Ensures all required labels exist for Dependabot and other automation
# Trigger: Manual workflow dispatch or on push to main (runs once to setup)
# ============================================================================

name: Setup GitHub Labels

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/setup-labels.yml'

jobs:
  setup-labels:
    name: Create Required Labels
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    
    steps:
      - name: Create or Update Labels
        uses: actions/github-script@v8
        with:
          script: |
            const labels = [
              {
                name: 'automated',
                color: '0366d6',
                description: 'Automated updates and changes'
              },
              {
                name: 'ci-cd',
                color: '0e8a16',
                description: 'Continuous Integration and Deployment'
              },
              {
                name: 'dependencies',
                color: '0366d6',
                description: 'Dependency updates'
              },
              {
                name: 'github-actions',
                color: '000000',
                description: 'GitHub Actions workflow updates'
              },
              {
                name: 'npm',
                color: 'cb3837',
                description: 'NPM package updates'
              }
            ];

            for (const label of labels) {
              try {
                // Try to get the label first
                await github.rest.issues.getLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name
                });
                
                // If it exists, update it
                await github.rest.issues.updateLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                
                console.log(`✓ Updated label: ${label.name}`);
              } catch (error) {
                if (error.status === 404) {
                  // Label doesn't exist, create it
                  await github.rest.issues.createLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                  
                  console.log(`✓ Created label: ${label.name}`);
                } else {
                  console.error(`✗ Error processing label ${label.name}:`, error.message);
                  throw error;
                }
              }
            }
            
            console.log('\n✓ All labels have been created/updated successfully!');
